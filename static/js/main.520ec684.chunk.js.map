{"version":3,"sources":["FirebaseConfig.js","Brick.tsx","FirebaseSignOut.tsx","FirebaseSignIn.tsx","CustomNavbar.tsx","Home.tsx","Scheduler.tsx","NotFound.tsx","index.tsx"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","Bricks","createGroup","group","i","props","authenticated","push","firebase","isSignedIn","to","name","toLowerCase","replace","style","textDecoration","color","Card","margin","Body","Title","Text","description","onClick","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","href","length","aria-label","this","Component","FirebaseSignOut","NavDropdown","Item","disabled","currentUser","email","signOut","then","window","location","reload","FirebaseSignIn","title","displayName","id","console","log","authProvider","OAuthProvider","CustomNavbar","Navbar","bg","variant","Container","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Home","active","Scheduler","state","share","scheduleName","powerschoolSchedule","powerschoolArray","event","setState","target","value","datastruct","forEach","mod","split","filter","entry","isNaN","map","getModSchedule","a","b","undefined","Array","keys","x","interim","element","expression","teacher","room","expressionArray","mods","v","item","includes","days","substring","arr","parseInt","dayMappings","newDays","day","rg","range","cleanedSchedule","modItems","fontWeight","textAlign","Form","Group","controlId","Label","Control","type","placeholder","onChange","handleScheduleName","bind","as","rows","handlePowerschoolSchedule","ToggleButton","checked","e","currentTarget","Button","fluid","Table","striped","bordered","hover","renderHelper","NotFound","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.520ec684.chunk.js","sourcesContent":["export const config = {\r\n    apiKey: \"AIzaSyBfuLbTORxpxxhCMM7rCPSalIE-L8EDyvw\",\r\n    authDomain: \"imsa-room-designer.firebaseapp.com\",\r\n    projectId: \"imsa-room-designer\",\r\n    storageBucket: \"imsa-room-designer.appspot.com\",\r\n    messagingSenderId: \"767303068136\",\r\n    appId: \"1:767303068136:web:54c82fffc7cabb05ac9c5d\",\r\n    measurementId: \"G-8TTP95Q69P\",\r\n    databaseURL: \"https://imsa-room-designer.firebaseio.com\",\r\n};\r\n","import React, {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {FirebaseAuthConsumer, FirebaseAuthProvider} from \"@react-firebase/auth\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {config} from \"./FirebaseConfig\";\r\n\r\ninterface BricksProps {\r\n    props: Record<string, any>,\r\n}\r\n\r\nexport class Bricks extends Component<BricksProps> {\r\n    createGroup = () => {\r\n        let group: any[] = []\r\n        for (let i = 0; i < this.props.props.length; i++) {\r\n            if (this.props.props[i].authenticated) {\r\n                group.push(<FirebaseAuthProvider {...config} firebase={firebase}>\r\n                    <div>\r\n                        <FirebaseAuthConsumer>\r\n                            {({isSignedIn, firebase}) => {\r\n                                if (isSignedIn === true) {\r\n                                    return (\r\n                                        <Link key={`${this.props.props[i].name.toLowerCase()}.Link`}\r\n                                              to={this.props.props[i].name.toLowerCase().replace(' ', '-')} style={{textDecoration: 'none', color: 'inherit'}}>\r\n                                            <Card key={`${this.props.props[i].name.toLowerCase()}`}\r\n                                                  style={{margin: 20}}>\r\n                                                <Card.Body>\r\n                                                    <Card.Title key={this.props.props[i].name.toLowerCase().Title}\r\n                                                                style={{color: '#005faf'}}>{this.props.props[i].name.replace(/([A-Z])/g, ' $1')}</Card.Title>\r\n                                                    <Card.Text key={this.props.props[i].name.toLowerCase().Text}\r\n                                                               style={{color: '#005faf'}}>{this.props.props[i].description}</Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <a style={{textDecoration: 'none', color: 'inherit'}} onClick={() => {\r\n                                            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                                            firebase.auth().signInWithPopup(googleAuthProvider);\r\n                                        }} href=\"javascript:;\">\r\n                                            <Card key={`${this.props.props[i].name.toLowerCase()}`}\r\n                                                  style={{margin: 20}}>\r\n                                                <Card.Body>\r\n                                                    <Card.Title key={this.props.props[i].name.toLowerCase().Title}\r\n                                                                style={{color: '#005faf'}}>{this.props.props[i].name.replace(/([A-Z])/g, ' $1')}</Card.Title>\r\n                                                    <Card.Text key={this.props.props[i].name.toLowerCase().Text}\r\n                                                               style={{color: '#005faf'}}>{this.props.props[i].description}</Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </a>\r\n                                    );\r\n                                }\r\n                            }}\r\n                        </FirebaseAuthConsumer>\r\n                    </div>\r\n                </FirebaseAuthProvider>)\r\n            } else {\r\n                group.push(<Link key={`${this.props.props[i].name.toLowerCase()}.Link`}\r\n                                 to={this.props.props[i].name.toLowerCase().replace(\" \", \"-\")}>\r\n                    <Card key={`${this.props.props[i].name.toLowerCase()}`} style={{margin: 20}}>\r\n                        <Card.Body>\r\n                            <Card.Title key={this.props.props[i].name.toLowerCase().Title}\r\n                                        style={{color: '#005faf'}}>{this.props.props[i].name.replace(/([A-Z])/g, ' $1')}</Card.Title>\r\n                            <Card.Text key={this.props.props[i].name.toLowerCase().Text}\r\n                                       style={{color: '#005faf'}}>{this.props.props[i].description}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Link>)\r\n            }\r\n\r\n        }\r\n        return group\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div aria-label=\"Property chooser\" key={'opts'}>\r\n                {this.createGroup()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import {FirebaseAuthConsumer, FirebaseAuthProvider} from \"@react-firebase/auth\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {config} from \"./FirebaseConfig\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nexport class FirebaseSignOut extends Component {\r\n    render() {\r\n        return (\r\n            <FirebaseAuthProvider {...config} firebase={firebase}>\r\n                <div>\r\n                    <FirebaseAuthConsumer>\r\n                        {({isSignedIn, firebase}) => {\r\n                            if (isSignedIn === true) {\r\n                                return (\r\n                                    <div>\r\n                                        <NavDropdown.Item disabled={true}>\r\n                                            Email: {firebase.auth().currentUser.email}\r\n                                        </NavDropdown.Item>\r\n                                        <NavDropdown.Item onClick={() => {\r\n                                            firebase.auth().signOut().then(() => {\r\n                                                window.location.reload();\r\n                                            })\r\n                                        }}>\r\n                                            Sign Out\r\n                                        </NavDropdown.Item>\r\n                                    </div>\r\n\r\n                                );\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        }}\r\n                    </FirebaseAuthConsumer>\r\n                </div>\r\n            </FirebaseAuthProvider>\r\n        )\r\n    }\r\n}\r\n","import {FirebaseAuthConsumer, FirebaseAuthProvider} from \"@react-firebase/auth\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {config} from \"./FirebaseConfig\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport {FirebaseSignOut} from \"./FirebaseSignOut\";\r\n\r\nexport class FirebaseSignIn extends Component {\r\n    render() {\r\n        return (\r\n            <FirebaseAuthProvider {...config} firebase={firebase}>\r\n                <div>\r\n                    <FirebaseAuthConsumer>\r\n                        {({isSignedIn, firebase}) => {\r\n                            if (isSignedIn === true) {\r\n                                return (\r\n                                    <NavDropdown title={`Signed in as: ${firebase.auth().currentUser.displayName}`}\r\n                                                 id=\"navbarScrollingDropdown\">\r\n                                        <FirebaseSignOut/>\r\n                                    </NavDropdown>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <NavDropdown title=\"Sign in\" id=\"navbarScrollingDropdown\">\r\n                                        <NavDropdown.Item onClick={() => {\r\n                                            console.log(firebase.auth)\r\n                                            const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                                            firebase.auth().signInWithPopup(googleAuthProvider);\r\n                                        }}>\r\n                                            with Google\r\n                                        </NavDropdown.Item>\r\n                                        <NavDropdown.Item disabled={true} onClick={() => {\r\n                                            console.log(firebase.auth)\r\n                                            const authProvider = new firebase.auth.OAuthProvider('microsoft.com');\r\n                                            firebase.auth().signInWithPopup(authProvider);\r\n                                        }}>\r\n                                            with Microsoft\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                );\r\n                            }\r\n                        }}\r\n                    </FirebaseAuthConsumer>\r\n                </div>\r\n            </FirebaseAuthProvider>\r\n        )\r\n    }\r\n}\r\n","import Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport React, {Component} from \"react\";\r\nimport {FirebaseSignIn} from \"./FirebaseSignIn\";\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface CustomNavbarProps {\r\n    active: string\r\n}\r\n\r\nexport class CustomNavbar extends Component<CustomNavbarProps> {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#\">\r\n                        IMSA Schedule Share\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <Nav.Link>\r\n                                <Link to=\"/\" style={{textDecoration: 'none', color: 'inherit'}}>\r\n                                    Home\r\n                                </Link>\r\n                            </Nav.Link>\r\n                            <Nav.Link> <Link to=\"/scheduler\" style={{textDecoration: 'none', color: 'inherit'}}>\r\n                                Scheduler\r\n                            </Link></Nav.Link>\r\n                            <Nav.Link> <Link to=\"/view-schedules\" style={{textDecoration: 'none', color: 'inherit'}}>\r\n                                View Schedules\r\n                            </Link></Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <FirebaseSignIn/>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Bricks} from './Brick'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './index.css'\r\nimport {CustomNavbar} from \"./CustomNavbar\";\r\nimport \"firebase/auth\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <CustomNavbar active='home'/>\r\n            <Container>\r\n                <Bricks\r\n                    props={[\r\n                        {name: \"Scheduler\", description: \"Enter the schedule creator\", authenticated: true},\r\n                        {name: \"View Schedules\", description: \"View your saved schedules\", authenticated: true},\r\n                    ]}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import './index.css'\r\nimport { CustomNavbar } from \"./CustomNavbar\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport \"firebase/auth\";\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Component } from 'react';\r\n\r\n\r\ninterface SchedulerProps {\r\n\r\n}\r\n\r\ninterface SchedulerState {\r\n    share: boolean,\r\n    scheduleName: string,\r\n    powerschoolSchedule: string,\r\n    powerschoolArray: string[],\r\n    cleanedSchedule?: any[]\r\n}\r\n\r\nexport default class Scheduler extends Component<SchedulerProps, SchedulerState> {\r\n    // @ts-ignore\r\n    constructor(props: SchedulerProps) {\r\n        super(props);\r\n        this.state = { share: false, scheduleName: 'Semester 1 Schedule', powerschoolSchedule: '', powerschoolArray: [] };\r\n    }\r\n    handleScheduleName(event) {\r\n        this.setState({ scheduleName: event?.target.value })\r\n    }\r\n    getTableEntries(datastruct) {\r\n        datastruct.forEach(mod => {\r\n\r\n        })\r\n        return null;\r\n    }\r\n    handlePowerschoolSchedule(event) {\r\n        this.setState({ powerschoolSchedule: event?.target.value })\r\n        if (this.state.powerschoolSchedule === '') return null;\r\n        let powerschool = this.state.powerschoolSchedule;\r\n        let powerschoolArray: any = powerschool.split(\"\\n\");\r\n        // filter out lines that do not start with numbers as they cannot possibly be valid expressions.\r\n        // this allows headers to be pasted.\r\n        powerschoolArray = powerschoolArray.filter((entry: any) => {\r\n            return !isNaN(entry[0]);\r\n        })\r\n        powerschoolArray = powerschoolArray.map(function (entry) {\r\n            return entry.split(\"\\t\");\r\n        });\r\n        this.getModSchedule(powerschoolArray);\r\n    }\r\n    range(a,b){\r\n        if (b === undefined) {\r\n            b = a;\r\n            a = 1;\r\n        }\r\n        return [...Array(b-a+1).keys()].map(x => x+a);\r\n    }\r\n    \r\n    getModSchedule(powerschoolArray) {\r\n        if (this.state.powerschoolSchedule === '') return null;\r\n        let interim: any[][] = [];\r\n        powerschoolArray.forEach(element => {\r\n            let expression: string = element[0]\r\n            let name: string = element[3]\r\n            let teacher: string = element[4]\r\n            let room: string = element[5]\r\n            // process expression (some taken from George Moe's IMSA Scheduler)\r\n            expression = expression.replace(/ +/g, \"\");\r\n            let expressionArray: string[] = expression.split(/\\),*(?=[0-9])/g);\r\n            expressionArray = expressionArray.map(function (v, i, a) {\r\n                if (i < a.length - 1) return v + \")\"; else return v;\r\n            });\r\n            // end George Moe code\r\n            expression = expressionArray.filter((item) => !item.includes('Sp'))[0]\r\n            let mods = expression.split('(')[0]\r\n            let days = expression.split('(')[1].substring(0, expression.split('(')[1].length - 1)\r\n            const arr = [name, teacher, room, mods.split('-').map(item => { return parseInt(item, 10) - 1 }), days.split(',')]\r\n            interim.push(arr)\r\n        });\r\n        let datastruct: any = []\r\n        for (let i = 0; i < 8; i++) {\r\n            datastruct.push([null, null, null, null, null])\r\n        }\r\n        let dayMappings = { \"A\": 0, \"B\": 1, \"I\": 2, \"C\": 3, \"D\": 4 }\r\n        // now convert to datastruct containing table data\r\n        interim.forEach(element => {\r\n            let mods = element[3]\r\n            let days = element[4]\r\n            let newDays: any[] = []\r\n            days.forEach(day => {\r\n                if (day.includes('-')) {\r\n                    let split = day.split('-')\r\n                    split = split.map(item => dayMappings[item]);\r\n                    let rg = this.range(split[0], split[1])\r\n                    rg = rg.filter(item => item !== 2)\r\n                    // @ts-ignore\r\n                    return rg.forEach(item => newDays.push(item))\r\n                }\r\n                // @ts-ignore\r\n                return newDays.push(dayMappings[day])\r\n            })\r\n            days = newDays\r\n            mods.forEach(mod => {\r\n                days.forEach(day => {\r\n                    datastruct[mod][day] = {name: element[0], teacher: element[1], room: element[2]}\r\n                });\r\n            });\r\n        })\r\n        // @ts-ignore\r\n        this.setState({ cleanedSchedule: datastruct })\r\n    }\r\n    renderHelper(mod) {\r\n        if (!this.state.cleanedSchedule) return null;\r\n        const modItems = this.state.cleanedSchedule[mod - 1].map((item) => {\r\n            if (!item) return <td></td>\r\n            return <td><a style={{ fontWeight: \"bold\", textAlign: \"center\" }}>{item.name}</a><br />{item.teacher}<br />{item.room}</td>\r\n        })\r\n        return (\r\n            <tr>\r\n                <td>{mod}</td>\r\n                {modItems}\r\n            </tr>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <CustomNavbar active='designer' />\r\n                <br></br>\r\n                <Container>\r\n                    <h1>Input Data</h1>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"scheduleInput\">\r\n                            <Form.Label>Schedule Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Semester 1 Schedule\" onChange={this.handleScheduleName.bind(this)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"powerschoolInput\">\r\n                            <Form.Label>PowerSchool Schedule</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} placeholder='Paste PowerSchool table from \"Year Schedule\" section here.' onChange={this.handlePowerschoolSchedule.bind(this)} />\r\n                        </Form.Group>\r\n                        <ToggleButton\r\n                            className=\"mb-2\"\r\n                            id=\"toggle\"\r\n                            type=\"checkbox\"\r\n                            variant=\"outline-primary\"\r\n                            checked={this.state.share}\r\n                            value=\"share\"\r\n                            onChange={(e) => this.setState({ share: e.currentTarget.checked })}\r\n                        >\r\n                            Share Schedule\r\n                        </ToggleButton>\r\n                        <br></br>\r\n                        <Button variant=\"primary\">Create Schedule</Button>{' '}\r\n                    </Form>\r\n                </Container>\r\n                <Container fluid=\"xl\">\r\n                    <h1>Your Schedule</h1>\r\n\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Mod</th>\r\n                                <th>A</th>\r\n                                <th>B</th>\r\n                                <th>I</th>\r\n                                <th>C</th>\r\n                                <th>D</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderHelper(1)}\r\n                            {this.renderHelper(2)}\r\n                            {this.renderHelper(3)}\r\n                            {this.renderHelper(4)}\r\n                            {this.renderHelper(5)}\r\n                            {this.renderHelper(6)}\r\n                            {this.renderHelper(7)}\r\n                            {this.renderHelper(8)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport './index.css'\r\nimport {CustomNavbar} from \"./CustomNavbar\";\r\nimport \"firebase/auth\";\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <CustomNavbar active='home'/>\r\n            <Container>\r\n                <h1>404 Not Found</h1>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\n\n// Screens\nimport Home from './Home';\nimport Scheduler from './Scheduler';\nimport NotFound from './NotFound';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact     component={ Home } />\n                <Route path=\"/home\" exact     component={ Home } />\n                <Route path=\"/scheduler\"     component={ Scheduler } />\n                <Route component={NotFound} />\n            </Switch>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}